{"version":3,"file":"static/js/MovieCard.72037565.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","webpack://goit-react-hw-05-movies/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","js/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\",\"center\":\"Button_center__afHOB Button_btn__RBtNK\"};","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\nfunction Button({ text, onClick, type = \"button\", className = \"btn\" }) {\n  return (\n    <button type={type} className={s[className]} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieCard_wrapper__UNKq4\",\"img\":\"MovieCard_img__YZsvZ\",\"content\":\"MovieCard_content__1bWZZ\",\"genres\":\"MovieCard_genres__EDNHv\",\"information\":\"MovieCard_information__DyslR\",\"list\":\"MovieCard_list__Sduoj\"};","// import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link, Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport Section from \"components/Section\";\nimport Container from \"components/Container\";\n// import Loader from \"components/Loader\";\nimport Button from \"components/Button\";\nimport * as movieAPI from \"../../js/moviesAPI\";\nimport s from \"./MovieCard.module.css\";\n\nconst IMAGE_BASE_URL = \"https://www.themoviedb.org/t/p/w300_and_h450_bestv2\";\n\nfunction MovieCard(props) {\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n  const { data } = useQuery(`${movieId}`, getMovie, {\n    placeholderData: {\n      release_date: \"1970\",\n      genres: [],\n    },\n    retry: false,\n    onError: () => navigate(\"/\"),\n  });\n  function getMovie() {\n    return movieAPI.getMovie(movieId);\n  }\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    data;\n  const year = release_date.slice(0, 4);\n  const posterUrl = poster_path\n    ? `${IMAGE_BASE_URL}${poster_path}`\n    : \"/300x450.png\";\n  // if (isLoading) return <Loader />;\n  return (\n    <Section>\n      <Container>\n        <Button text=\"Go back\" onClick={() => navigate(-1)} />\n        <div className={s.wrapper}>\n          <img src={posterUrl} alt={title} className={s.img} />\n          <div className={s.content}>\n            <h1>\n              {title} ({year})\n            </h1>\n            <p>User score: {Math.round(vote_average * 10)}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            {genres.length && (\n              <ul className={s.genres}>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n        <div className={s.information}>\n          <p>Additional information</p>\n          <ul className={s.list}>\n            <li>\n              <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n            </li>\n            <li>\n              <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Outlet context={[movieId]} />\n      </Container>\n    </Section>\n  );\n}\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"search\":\"Section_search__Yd9dR\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ type = \"section\", children }) {\n  return <section className={s[type]}>{children}</section>;\n}\n\nSection.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"fadfbb72581e18342bb7490adda20bdd\";\nconst MOVIES = \"search/movie\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then((r) => {\n    if (r.ok) return r.json();\n    return Promise.reject(r);\n  });\n}\nfunction getMovies(query) {\n  const searchQuery = `?query=${query}`;\n  const url = `${BASE_URL}${MOVIES}${searchQuery}&api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getMovie(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getCast(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/credits?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.cast);\n}\nfunction getReviews(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/reviews?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nexport { fetchUrl, getMovies, getMovie, getCast, getReviews, getTrending };\n"],"names":["text","onClick","type","className","s","props","navigate","useNavigate","movieId","useParams","data","useQuery","movieAPI","placeholderData","release_date","genres","retry","onError","poster_path","title","vote_average","overview","year","slice","posterUrl","Section","Container","src","alt","Math","round","length","map","id","name","to","context","children","BASE_URL","KEY","fetchUrl","url","fetch","then","r","ok","json","Promise","reject","getMovies","query","searchQuery","results","getMovie","movie","getCast","cast","getReviews","getTrending"],"sourceRoot":""}