{"version":3,"file":"static/js/Movies.8c4900c4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","js/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","webpack://goit-react-hw-05-movies/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.jsx","components/SearchForm/SearchForm.jsx","components/MovieSearch/MovieSearch.jsx","views/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCard_item__c3tx6\",\"link\":\"MovieCard_link__EvibY\",\"img\":\"MovieCard_img__YZsvZ\",\"text\":\"MovieCard_text__NNMdE\"};","import { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport s from \"./MovieCard.module.css\";\n\nfunction MovieCard({ movie, pathname }) {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const { id, title, name, poster_path, release_date, first_air_date } = movie;\n  const year = new Date(release_date || first_air_date).getFullYear() || \"\";\n  return (\n    <li className={s.item}>\n      <Link\n        to={`${pathname}/${id}`}\n        state={{ ...location, query }}\n        className={s.link}\n      >\n        <img\n          className={s.img}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title ?? name}\n        />\n        <p className={s.text}>\n          {title ?? name}, {year}\n        </p>\n      </Link>\n    </li>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from \"prop-types\";\nimport MovieCard from \"components/MovieCard\";\nimport s from \"./MovieList.module.css\";\n\nfunction MovieList({ movies = [], pathname }) {\n  return (\n    <ul className={s.list}>\n      {movies.map((movie) => (\n        <MovieCard key={movie.id} movie={movie} pathname={pathname} />\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"search\":\"Section_search__Yd9dR\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ type = \"section\", children }) {\n  return <section className={s[type]}>{children}</section>;\n}\n\nSection.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","class MoviesApi {\n  static #BASE_URL = \"https://api.themoviedb.org/3/\";\n  static #KEY = \"fadfbb72581e18342bb7490adda20bdd\";\n  static #PARAMS = new URLSearchParams({\n    api_key: MoviesApi.#KEY,\n    language: \"en-US\",\n  });\n  static ENDPOINTS = {\n    SEARCH: \"search/movie\",\n    MOVIE: \"movie/\",\n    TRENDING: \"trending/all/day\",\n  };\n  #query;\n  #page;\n\n  constructor() {\n    this.#page = 1;\n  }\n\n  #fetchUrl(url) {\n    return fetch(`${MoviesApi.#BASE_URL}${url}${MoviesApi.#PARAMS}`).then((r) =>\n      r.ok ? r.json() : Promise.reject(r)\n    );\n  }\n  getMovies() {\n    const params = new URLSearchParams({\n      query: this.#query,\n      page: this.#page,\n    });\n    const url = `${MoviesApi.ENDPOINTS.SEARCH}?${params}&`;\n    return this.#fetchUrl(url).then((r) => r.results);\n  }\n  getMovie(id) {\n    const url = `${MoviesApi.ENDPOINTS.MOVIE}${id}?`;\n    return this.#fetchUrl(url);\n  }\n  getCast(id) {\n    const url = `${MoviesApi.ENDPOINTS.MOVIE}${id}/credits?`;\n    return this.#fetchUrl(url).then((r) => r.cast);\n  }\n  getReviews(id) {\n    const url = `${MoviesApi.ENDPOINTS.MOVIE}${id}/reviews?`;\n    return this.#fetchUrl(url).then((r) => r.results);\n  }\n  getTrending = () => {\n    const url = `${MoviesApi.ENDPOINTS.TRENDING}?page=${this.#page}&`;\n    return this.#fetchUrl(url);\n  };\n  get query() {\n    return this.#query;\n  }\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n  get page() {\n    return this.#page;\n  }\n  set page(newPage) {\n    this.#page = newPage > 0 ? newPage : 1;\n  }\n}\n\nconst api = new MoviesApi();\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"label\":\"SearchForm_label__GvSVH\",\"btn\":\"SearchForm_btn__TXrR3\",\"input\":\"SearchForm_input__HOxJo\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"IconButton_btn__PoeXD\",\"search\":\"IconButton_search__qfkbX IconButton_btn__PoeXD\"};","import { AiOutlineSearch } from \"react-icons/ai\";\nimport PropTypes from \"prop-types\";\nimport s from \"./IconButton.module.css\";\n\nfunction IconButton({ type = \"button\", icon }) {\n  switch (icon) {\n    case \"search\":\n      return (\n        <button type={type} className={s.search} aria-label=\"search\">\n          <AiOutlineSearch style={{ width: \"40\" }} />\n        </button>\n      );\n    default:\n      return <button type={type} aria-label=\"button\"></button>;\n  }\n}\n\nIconButton.propTypes = {\n  type: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default IconButton;\n","import { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport s from \"./SearchForm.module.css\";\nimport IconButton from \"components/IconButton\";\n\nfunction SearchForm(props) {\n  const [query, setQuery] = useState(\"\");\n  const [, setSearchParams] = useSearchParams();\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setQuery(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const query = e.target.query.value.trim().toLowerCase();\n    if (query) {\n      setSearchParams({ query });\n    } else {\n      setSearchParams({});\n    }\n    reset();\n  };\n  const reset = () => setQuery(\"\");\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span className={s.btn}>\n          <IconButton type=\"submit\" icon=\"search\" />\n        </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movies\"\n          value={query}\n          onInput={handleInputChange}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import { useQuery } from \"react-query\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport MovieList from \"components/MovieList\";\nimport Loader from \"components/Loader\";\nimport api from \"js/moviesAPI\";\n// import s from \"./MovieSearch.module.css\";\n\nfunction MovieSearch() {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const { data, isLoading } = useQuery([\"movies\", query], getMovies);\n  function getMovies() {\n    if (!query) return [];\n    api.query = query;\n    return api.getMovies();\n  }\n  const { pathname } = useLocation();\n\n  if (isLoading) return <Loader />;\n  return <MovieList movies={data} pathname={pathname} />;\n}\n\nexport default MovieSearch;\n","import Section from \"components/Section\";\nimport Container from \"components/Container\";\nimport SearchForm from \"components/SearchForm\";\nimport MovieSearch from \"components/MovieSearch\";\n\nfunction Movies() {\n  return (\n    <Section>\n      <Container>\n        <SearchForm />\n        <MovieSearch />\n      </Container>\n    </Section>\n  );\n}\n\nexport default Movies;\n"],"names":["movie","pathname","location","useLocation","useSearchParams","query","get","id","title","name","poster_path","release_date","first_air_date","year","Date","getFullYear","className","s","to","state","src","alt","movies","map","type","children","MoviesApi","getTrending","url","ENDPOINTS","TRENDING","this","params","URLSearchParams","page","SEARCH","then","r","results","MOVIE","cast","newQuery","newPage","fetch","ok","json","Promise","reject","api_key","language","api","icon","style","width","props","useState","setQuery","setSearchParams","reset","onSubmit","e","preventDefault","target","value","trim","toLowerCase","placeholder","onInput","useQuery","data","isLoading","Loader","MovieList","Section","Container"],"sourceRoot":""}