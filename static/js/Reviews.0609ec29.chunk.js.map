{"version":3,"file":"static/js/Reviews.0609ec29.chunk.js","mappings":"mOACA,EAAuB,sBAAvB,EAAsD,wB,SCyBtD,MApBA,SAAiBA,GACf,OAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,UAAS,OAAD,OAAQD,IAC5C,WACE,OAAOE,EAAAA,GAAoBF,MAFrBG,EAAR,EAAQA,KAIR,OAJA,EAAcC,WAIQ,SAACC,EAAA,EAAD,IACjBF,EAAKG,QAER,eAAIC,UAAWC,EAAf,SACGL,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,2BACE,eAAGL,UAAWC,EAAd,qBAAiCG,MACjC,uBAAIC,MAFGF,SAJU,wC,qJCb3B,IAAMG,EAAW,gCACXC,EAAM,mCAGZ,SAASC,EAASC,GAChB,OAAOC,MAAMD,GAAKE,MAAK,SAACC,GACtB,OAAIA,EAAEC,GAAWD,EAAEE,OACZC,QAAQC,OAAOJ,MAG1B,SAASK,EAAUC,GACjB,IAAMC,EAAW,iBAAaD,GAE9B,OAAOV,EADE,UAAMF,GAAN,OAVI,gBAUJ,OAA0Ba,EAA1B,oBAAiDZ,EAAjD,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ,WAErC,SAASC,EAASlB,GAChB,IAAMmB,EAAK,gBAAYnB,GAEvB,OAAOK,EADE,UAAMF,GAAN,OAAiBgB,EAAjB,oBAAkCf,EAAlC,oBAGX,SAASgB,EAAQpB,GACf,IAAMmB,EAAK,gBAAYnB,GAEvB,OAAOK,EADE,UAAMF,GAAN,OAAiBgB,EAAjB,4BAA0Cf,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEY,QAErC,SAASC,EAAWtB,GAClB,IAAMmB,EAAK,gBAAYnB,GAEvB,OAAOK,EADE,UAAMF,GAAN,OAAiBgB,EAAjB,4BAA0Cf,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ,WAErC,SAASM,IAEP,OAAOlB,EADE,UAAMF,EAAN,oCAA0CC,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","js/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"author\":\"Reviews_author__CqYAZ\"};","import { useQuery } from \"react-query\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Loader from \"components/Loader\";\nimport * as movieAPI from \"../../js/moviesAPI\";\nimport s from \"./Reviews.module.css\";\n\nfunction Reviews(props) {\n  const [movieId] = useOutletContext();\n  const { data, isLoading } = useQuery(`cast${movieId}`, getReviews);\n  function getReviews() {\n    return movieAPI.getReviews(movieId);\n  }\n  if (isLoading) return <Loader />;\n  if (!data.length) return <p>No reviews</p>;\n  return (\n    <ul className={s.list}>\n      {data.map(({ id, author, content }) => (\n        <li key={id}>\n          <p className={s.author}>Author: {author}</p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Reviews;\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"fadfbb72581e18342bb7490adda20bdd\";\nconst MOVIES = \"search/movie\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then((r) => {\n    if (r.ok) return r.json();\n    return Promise.reject(r);\n  });\n}\nfunction getMovies(query) {\n  const searchQuery = `?query=${query}`;\n  const url = `${BASE_URL}${MOVIES}${searchQuery}&api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getMovie(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getCast(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/credits?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.cast);\n}\nfunction getReviews(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/reviews?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nexport { fetchUrl, getMovies, getMovie, getCast, getReviews, getTrending };\n"],"names":["props","useOutletContext","movieId","useQuery","movieAPI","data","isLoading","Loader","length","className","s","map","id","author","content","BASE_URL","KEY","fetchUrl","url","fetch","then","r","ok","json","Promise","reject","getMovies","query","searchQuery","results","getMovie","movie","getCast","cast","getReviews","getTrending"],"sourceRoot":""}