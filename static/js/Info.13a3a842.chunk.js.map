{"version":3,"file":"static/js/Info.13a3a842.chunk.js","mappings":"yNACA,EAAsB,kBAAtB,EAA+C,mBAA/C,EAAyE,mB,SCyBzE,MAtBA,YAAyB,IAATA,EAAQ,EAARA,KACd,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAKG,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC7BC,EAAaF,EAAY,UANvB,qDAMuB,OACdA,GACb,eACJ,OACE,gBAAaL,UAAWC,EAAxB,WACE,gBAAKO,IAAKD,EAAYE,IAAI,OAAOT,UAAWC,KAC5C,uBAAIG,KACJ,uCAAeE,OAHRH,SCXnB,EAAuB,sBAAvB,EAAsD,wBCiBtD,MAfA,YAA4B,IAATJ,EAAQ,EAARA,KACjB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIO,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,2BACE,eAAGX,UAAWC,EAAd,qBAAiCS,MACjC,uBAAIC,MAFGR,S,SCkBjB,MAjBA,YAAyB,IAATS,EAAQ,EAARA,KACd,GAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,UAAS,GAAD,OAAIH,GAAJ,OAAWE,IAC/C,WACE,GAAa,SAATF,EAAiB,OAAOI,EAAAA,GAAiBF,GAC7C,GAAa,YAATF,EAAoB,OAAOI,EAAAA,GAAoBF,MAH7Cf,EAAR,EAAQA,KAKR,OALA,EAAckB,WAKQ,SAACC,EAAA,EAAD,IACjBnB,EAAKoB,OACG,SAATP,GAAwB,SAAC,EAAD,CAAMb,KAAMA,IAC3B,YAATa,GAA2B,SAAC,EAAD,CAASb,KAAMA,SAA9C,GAFyB,wC,qJChB3B,IAAMqB,EAAW,gCACXC,EAAM,mCAGZ,SAASC,EAASC,GAChB,OAAOC,MAAMD,GAAKE,MAAK,SAACC,GACtB,OAAIA,EAAEC,GAAWD,EAAEE,OACZC,QAAQC,OAAOJ,MAG1B,SAASK,EAAUC,GACjB,IAAMC,EAAW,iBAAaD,GAE9B,OAAOV,EADE,UAAMF,GAAN,OAVI,gBAUJ,OAA0Ba,EAA1B,oBAAiDZ,EAAjD,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ,WAErC,SAASC,EAAShC,GAChB,IAAMiC,EAAK,gBAAYjC,GAEvB,OAAOmB,EADE,UAAMF,GAAN,OAAiBgB,EAAjB,oBAAkCf,EAAlC,oBAGX,SAASgB,EAAQlC,GACf,IAAMiC,EAAK,gBAAYjC,GAEvB,OAAOmB,EADE,UAAMF,GAAN,OAAiBgB,EAAjB,4BAA0Cf,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEY,QAErC,SAASC,EAAWpC,GAClB,IAAMiC,EAAK,gBAAYjC,GAEvB,OAAOmB,EADE,UAAMF,GAAN,OAAiBgB,EAAjB,4BAA0Cf,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ,WAErC,SAASM,IAEP,OAAOlB,EADE,UAAMF,EAAN,oCAA0CC,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","components/Info/Info.js","js/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\"};","import PropTypes from \"prop-types\";\nimport s from \"./Cast.module.css\";\nconst IMG_URL = \"https://www.themoviedb.org/t/p/w138_and_h175_face\";\n\nfunction Cast({ data }) {\n  return (\n    <ul className={s.list}>\n      {data.map(({ id, name, profile_path, character }) => {\n        const profileUrl = profile_path\n          ? `${IMG_URL}${profile_path}`\n          : \"/138x175.png\";\n        return (\n          <li key={id} className={s.item}>\n            <img src={profileUrl} alt=\"name\" className={s.img} />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nCast.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"author\":\"Reviews_author__CqYAZ\"};","import PropTypes from \"prop-types\";\nimport s from \"./Reviews.module.css\";\n\nfunction Reviews({ data }) {\n  return (\n    <ul className={s.list}>\n      {data.map(({ id, author, content }) => (\n        <li key={id}>\n          <p className={s.author}>Author: {author}</p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\nReviews.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default Reviews;\n","import { useQuery } from \"react-query\";\nimport { useOutletContext } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"components/Loader\";\nimport Cast from \"components/Cast\";\nimport Reviews from \"components/Reviews\";\nimport * as movieAPI from \"../../js/moviesAPI\";\n\nfunction Info({ type }) {\n  const [movieId] = useOutletContext();\n  const { data, isLoading } = useQuery(`${type}${movieId}`, getInfo);\n  function getInfo() {\n    if (type === \"cast\") return movieAPI.getCast(movieId);\n    if (type === \"reviews\") return movieAPI.getReviews(movieId);\n  }\n  if (isLoading) return <Loader />;\n  if (!data.length) return <p>No reviews</p>;\n  if (type === \"cast\") return <Cast data={data} />;\n  if (type === \"reviews\") return <Reviews data={data} />;\n}\n\nInfo.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Info;\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"fadfbb72581e18342bb7490adda20bdd\";\nconst MOVIES = \"search/movie\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then((r) => {\n    if (r.ok) return r.json();\n    return Promise.reject(r);\n  });\n}\nfunction getMovies(query) {\n  const searchQuery = `?query=${query}`;\n  const url = `${BASE_URL}${MOVIES}${searchQuery}&api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getMovie(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getCast(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/credits?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.cast);\n}\nfunction getReviews(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/reviews?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nexport { fetchUrl, getMovies, getMovie, getCast, getReviews, getTrending };\n"],"names":["data","className","s","map","id","name","profile_path","character","profileUrl","src","alt","author","content","type","useOutletContext","movieId","useQuery","movieAPI","isLoading","Loader","length","BASE_URL","KEY","fetchUrl","url","fetch","then","r","ok","json","Promise","reject","getMovies","query","searchQuery","results","getMovie","movie","getCast","cast","getReviews","getTrending"],"sourceRoot":""}