{"version":3,"file":"static/js/Movie.51db7b0f.chunk.js","mappings":"uQACA,EAA0B,uBAA1B,EAAuD,mBAAvD,EAAoF,uBAApF,EAAoH,sBAApH,EAAwJ,2BAAxJ,EAA0L,oB,SCkH1L,MAlGA,WAAkB,IAAD,IACTA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAASC,EAAAA,EAAAA,UAAS,GAAD,OAAIH,IAQ7B,WACE,OAAOI,EAAAA,EAAAA,SAAaJ,KAT4B,CAChDK,gBAAiB,CACfC,aAAc,OACdC,OAAQ,IAEVC,OAAO,EACPC,QAAS,kBAAMb,EAAS,QANlBM,KAyBAQ,EACNR,EADMQ,YAAaC,EACnBT,EADmBS,MAAOL,EAC1BJ,EAD0BI,aAAcM,EACxCV,EADwCU,aAAcC,EACtDX,EADsDW,SAAUN,EAChEL,EADgEK,OAE5DO,EAAOR,EAAaS,MAAM,EAAG,GAC7BC,EAASN,EAAW,6CACgBA,GACtCO,EACEC,EAAeR,EAAW,6CACUA,GACtCS,EAEJ,OACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAQC,KAAK,UAAUC,QA3Bd,WAAO,IAAD,YAIfC,EAHEC,EAAY,iBAAG5B,QAAH,IAAGA,GAAH,UAAGA,EAAU6B,aAAb,aAAG,EAAiBC,gBAApB,QAAgC,IAC5CC,EAAK,iBAAG/B,QAAH,IAAGA,GAAH,UAAGA,EAAU6B,aAAb,aAAG,EAAiBE,aAApB,QAA6B,GAClCC,EAAI,iBAAGhC,QAAH,IAAGA,GAAH,UAAGA,EAAU6B,aAAb,aAAG,EAAiBG,YAApB,QAA4B,GAGpCL,EADEK,GAAQD,EACF,UAAMH,EAAN,kBAA4BG,EAA5B,iBAA0CC,GACzCA,EACD,UAAMJ,EAAN,iBAA2BI,GAC1BD,EACD,UAAMH,EAAN,kBAA4BG,GACpBH,EAClB9B,EAAS6B,OAgBL,iBAAKM,UAAWC,EAAhB,WACE,gCACE,mBAAQC,OAAM,UAAKjB,EAAL,gBAAmBE,EAAnB,UACd,gBAAKgB,IAAKlB,EAAQmB,IAAKxB,EAAOoB,UAAWC,QAE3C,iBAAKD,UAAWC,EAAhB,WACE,0BACGrB,EADH,IACWG,GAAI,WAAQA,EAAR,SAEf,uCACc,IACXF,EAAY,UAAMwB,KAAKC,MAAqB,GAAfzB,GAAjB,KAAyC,eAExD,sCACA,uBAAIC,KACJ,mCACCN,EAAO+B,QACN,eAAIP,UAAWC,EAAf,SACGzB,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,QAIb,yBAIN,iBAAKT,UAAWC,EAAhB,WACE,mDACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CACEU,GAAE,kBAAa1C,EAAb,SACF2B,MAAK,iBAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAU6B,aAAZ,QAAqB7B,EAF5B,qBAOF,yBACE,SAAC,KAAD,CACE4C,GAAE,kBAAa1C,EAAb,YACF2B,MAAK,iBAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAU6B,aAAZ,QAAqB7B,EAF5B,8BASN,SAAC,KAAD,CAAQ6C,QAAS,CAAC3C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movie_wrapper__ab4g-\",\"img\":\"Movie_img__WUHrV\",\"content\":\"Movie_content__TZWZo\",\"genres\":\"Movie_genres__y-BLu\",\"information\":\"Movie_information__7+iT3\",\"list\":\"Movie_list__sqWn9\"};","import { useQuery } from \"react-query\";\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from \"react-router-dom\";\nimport Section from \"components/Section\";\nimport Container from \"components/Container\";\n// import Loader from \"components/Loader\";\nimport Button from \"components/Button\";\nimport api from \"js/moviesAPI\";\nimport noImage from \"images/poster-img.jpg\";\nimport noImageRetina from \"images/poster-img@2x.jpg\";\nimport s from \"./Movie.module.css\";\n\nfunction Movie() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { movieId } = useParams();\n  const { data } = useQuery(`${movieId}`, getMovie, {\n    placeholderData: {\n      release_date: \"1970\",\n      genres: [],\n    },\n    retry: false,\n    onError: () => navigate(\"/\"),\n  });\n  function getMovie() {\n    return api.getMovie(movieId);\n  }\n  const goBack = () => {\n    const prevLocation = location?.state?.pathname ?? \"/\";\n    const query = location?.state?.query ?? \"\";\n    const page = location?.state?.page ?? \"\";\n    let prevPath;\n    if (page && query) {\n      prevPath = `${prevLocation}?query=${query}&page=${page}`;\n    } else if (page) {\n      prevPath = `${prevLocation}?page=${page}`;\n    } else if (query) {\n      prevPath = `${prevLocation}?query=${query}`;\n    } else prevPath = prevLocation;\n    navigate(prevPath);\n  };\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    data;\n  const year = release_date.slice(0, 4);\n  const poster = poster_path\n    ? `https://www.themoviedb.org/t/p/w300${poster_path}`\n    : noImage;\n  const posterRetina = poster_path\n    ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n    : noImageRetina;\n  // if (isLoading) return <Loader />;\n  return (\n    <Section>\n      <Container>\n        <Button text=\"Go back\" onClick={goBack} />\n        <div className={s.wrapper}>\n          <picture>\n            <source srcSet={`${poster} 1x, ${posterRetina} 2x`} />\n            <img src={poster} alt={title} className={s.img} />\n          </picture>\n          <div className={s.content}>\n            <h1>\n              {title} {year && `(${year})`}\n            </h1>\n            <p>\n              User score:{\" \"}\n              {vote_average ? `${Math.round(vote_average * 10)}%` : \"No votes\"}\n            </p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            {genres.length ? (\n              <ul className={s.genres}>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            ) : (\n              \"No genres found\"\n            )}\n          </div>\n        </div>\n        <div className={s.information}>\n          <p>Additional information</p>\n          <ul className={s.list}>\n            <li>\n              <Link\n                to={`/movies/${movieId}/cast`}\n                state={location?.state ?? location}\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                to={`/movies/${movieId}/reviews`}\n                state={location?.state ?? location}\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <Outlet context={[movieId]} />\n      </Container>\n    </Section>\n  );\n}\n\nexport default Movie;\n"],"names":["navigate","useNavigate","location","useLocation","movieId","useParams","data","useQuery","api","placeholderData","release_date","genres","retry","onError","poster_path","title","vote_average","overview","year","slice","poster","noImage","posterRetina","noImageRetina","Section","Container","Button","text","onClick","prevPath","prevLocation","state","pathname","query","page","className","s","srcSet","src","alt","Math","round","length","map","id","name","to","context"],"sourceRoot":""}