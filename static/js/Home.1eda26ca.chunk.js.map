{"version":3,"file":"static/js/Home.1eda26ca.chunk.js","mappings":"4LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAoF,uBAApF,EAAkH,wB,SC4BlH,MAzBA,YAAyC,IAApBA,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACpBC,GAAWC,EAAAA,EAAAA,MACTC,EAA+DJ,EAA/DI,GAAIC,EAA2DL,EAA3DK,MAAOC,EAAoDN,EAApDM,KAAMC,EAA8CP,EAA9CO,YAAaC,EAAiCR,EAAjCQ,aAAcC,EAAmBT,EAAnBS,eAC9CC,EAAO,IAAIC,KAAKH,GAAgBC,GAAgBG,eAAiB,GACvE,OACE,eAAIC,UAAWC,EAAf,UACE,UAAC,KAAD,CAAMC,GAAE,UAAKd,EAAL,YAAiBG,GAAMY,MAAOd,EAAUW,UAAWC,EAA3D,WACE,gBACED,UAAWC,EACXG,IAAG,yCAAoCV,GACvCW,IAAG,OAAEb,QAAF,IAAEA,EAAAA,EAASC,KAEhB,eAAGO,UAAWC,EAAd,iBACGT,QADH,IACGA,EAAAA,EAASC,EADZ,KACoBI,WChB5B,EAAuB,wBCkBvB,MAfA,YAA0C,IAArBS,EAAoB,EAApBA,OAAQlB,EAAY,EAAZA,SAC3B,OACE,eAAIY,UAAWC,EAAf,SACGK,EAAOC,KAAI,SAACpB,GAAD,OACV,SAAC,EAAD,CAA0BA,MAAOA,EAAOC,SAAUA,GAAlCD,EAAMI,W,oDCP9B,OAAgB,QAAU,yBAAyB,OAAS,yB,SCW5D,MATA,YAAkD,IAAD,IAA9BiB,KAAAA,OAA8B,MAAvB,UAAuB,EAAZC,EAAY,EAAZA,SACnC,OAAO,oBAAST,UAAWC,EAAEO,GAAtB,SAA8BC,M,qJCJvC,IAAMC,EAAW,gCACXC,EAAM,mCAGZ,SAASC,EAASC,GAChB,OAAOC,MAAMD,GAAKE,MAAK,SAACC,GACtB,OAAIA,EAAEC,GAAWD,EAAEE,OACZC,QAAQC,OAAOJ,MAG1B,SAASK,EAAUC,GACjB,IAAMC,EAAW,iBAAaD,GAE9B,OAAOV,EADE,UAAMF,GAAN,OAVI,gBAUJ,OAA0Ba,EAA1B,oBAAiDZ,EAAjD,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ,WAErC,SAASC,EAASlC,GAChB,IAAMJ,EAAK,gBAAYI,GAEvB,OAAOqB,EADE,UAAMF,GAAN,OAAiBvB,EAAjB,oBAAkCwB,EAAlC,oBAGX,SAASe,EAAQnC,GACf,IAAMJ,EAAK,gBAAYI,GAEvB,OAAOqB,EADE,UAAMF,GAAN,OAAiBvB,EAAjB,4BAA0CwB,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEW,QAErC,SAASC,EAAWrC,GAClB,IAAMJ,EAAK,gBAAYI,GAEvB,OAAOqB,EADE,UAAMF,GAAN,OAAiBvB,EAAjB,4BAA0CwB,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ,WAErC,SAASK,IAEP,OAAOjB,EADE,UAAMF,EAAN,oCAA0CC,EAA1C,oBACYI,MAAK,SAACC,GAAD,OAAOA,EAAEQ,a,4FCXrC,UAdA,WACE,OAA4BM,EAAAA,EAAAA,UAAS,WAAYC,EAAAA,IAAzCC,EAAR,EAAQA,KAER,OAFA,EAAcC,WAEQ,SAAC,IAAD,KAEpB,SAAC,IAAD,WACE,UAAC,IAAD,YACE,eAAIjC,UAAU,iBAAd,6BACA,SAAC,IAAD,CAAWM,OAAQ0B,EAAM5C,SAAS","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","js/moviesAPI.js","views/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCard_item__c3tx6\",\"link\":\"MovieCard_link__EvibY\",\"img\":\"MovieCard_img__YZsvZ\",\"text\":\"MovieCard_text__NNMdE\"};","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport s from \"./MovieCard.module.css\";\n\nfunction MovieCard({ movie, pathname }) {\n  const location = useLocation();\n  const { id, title, name, poster_path, release_date, first_air_date } = movie;\n  const year = new Date(release_date || first_air_date).getFullYear() || \"\";\n  return (\n    <li className={s.item}>\n      <Link to={`${pathname}/${id}`} state={location} className={s.link}>\n        <img\n          className={s.img}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title ?? name}\n        />\n        <p className={s.text}>\n          {title ?? name}, {year}\n        </p>\n      </Link>\n    </li>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from \"prop-types\";\nimport MovieCard from \"components/MovieCard\";\nimport s from \"./MovieList.module.css\";\n\nfunction MovieList({ movies, pathname }) {\n  return (\n    <ul className={s.list}>\n      {movies.map((movie) => (\n        <MovieCard key={movie.id} movie={movie} pathname={pathname} />\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"search\":\"Section_search__Yd9dR\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ type = \"section\", children }) {\n  return <section className={s[type]}>{children}</section>;\n}\n\nSection.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"fadfbb72581e18342bb7490adda20bdd\";\nconst MOVIES = \"search/movie\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then((r) => {\n    if (r.ok) return r.json();\n    return Promise.reject(r);\n  });\n}\nfunction getMovies(query) {\n  const searchQuery = `?query=${query}`;\n  const url = `${BASE_URL}${MOVIES}${searchQuery}&api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getMovie(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getCast(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/credits?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.cast);\n}\nfunction getReviews(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/reviews?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nfunction getTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url).then((r) => r.results);\n}\nexport { fetchUrl, getMovies, getMovie, getCast, getReviews, getTrending };\n","import { useQuery } from \"react-query\";\nimport Section from \"components/Section\";\nimport Container from \"components/Container\";\nimport Loader from \"components/Loader\";\nimport * as movieAPI from \"../js/moviesAPI\";\nimport MovieList from \"components/MovieList\";\n\nfunction Home() {\n  const { data, isLoading } = useQuery(\"trending\", movieAPI.getTrending);\n\n  if (isLoading) return <Loader />;\n  return (\n    <Section>\n      <Container>\n        <h1 className=\"trending-title\">Trending today</h1>\n        <MovieList movies={data} pathname=\"/movies\" />\n      </Container>\n    </Section>\n  );\n}\n\nexport default Home;\n"],"names":["movie","pathname","location","useLocation","id","title","name","poster_path","release_date","first_air_date","year","Date","getFullYear","className","s","to","state","src","alt","movies","map","type","children","BASE_URL","KEY","fetchUrl","url","fetch","then","r","ok","json","Promise","reject","getMovies","query","searchQuery","results","getMovie","getCast","cast","getReviews","getTrending","useQuery","movieAPI","data","isLoading"],"sourceRoot":""}