{"version":3,"file":"static/js/Movies.bf5838fe.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","webpack://goit-react-hw-05-movies/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.jsx","components/SearchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","views/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCard_item__c3tx6\",\"link\":\"MovieCard_link__EvibY\",\"img\":\"MovieCard_img__YZsvZ\",\"text\":\"MovieCard_text__NNMdE\"};","import { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport noImage from \"images/poster-img.jpg\";\nimport noImageRetina from \"images/poster-img@2x.jpg\";\nimport s from \"./MovieCard.module.css\";\n\nfunction MovieCard({ movie, pathname }) {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const { id, title, name, poster_path, release_date, first_air_date } = movie;\n  const year = new Date(release_date || first_air_date).getFullYear() || \"\";\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n    : noImage;\n  const posterRetina = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : noImageRetina;\n  return (\n    <li className={s.item}>\n      <Link\n        to={`${pathname}/${id}`}\n        state={{ ...location, query }}\n        className={s.link}\n      >\n        <picture>\n          <source srcSet={`${poster} 1x, ${posterRetina} 2x`} />\n          <img className={s.img} src={poster} alt={title ?? name} />\n        </picture>\n        <p className={s.text}>\n          {title ?? name}, {year}\n        </p>\n      </Link>\n    </li>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from \"prop-types\";\nimport MovieCard from \"components/MovieCard\";\nimport s from \"./MovieList.module.css\";\n\nfunction MovieList({ movies = [], pathname }) {\n  return (\n    <ul className={s.list}>\n      {movies.map((movie) => (\n        <MovieCard key={movie.id} movie={movie} pathname={pathname} />\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Pagination_list__t7oBK\"};","import Button from \"components/Button\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Pagination.module.css\";\n\nfunction Pagination({ page, setPage, totalPages }) {\n  const setNewPage = (newPage) => {\n    let pageToSet = newPage > 1 ? newPage : 1;\n    pageToSet = newPage < totalPages ? newPage : totalPages;\n    setPage(pageToSet);\n  };\n\n  return (\n    <div className={s.list}>\n      {page > 1 && (\n        <Button\n          text=\"<\"\n          onClick={() => setNewPage(page - 1)}\n          className=\"small\"\n        />\n      )}\n      {page > 1 && (\n        <Button text=\"1\" onClick={() => setPage(1)} className=\"small\" />\n      )}\n      {page - 2 > 2 && <span>...</span>}\n      {page - 2 > 1 && (\n        <Button\n          text={page - 2}\n          onClick={() => setNewPage(page - 2)}\n          className=\"small\"\n        />\n      )}\n      {page - 1 > 1 && (\n        <Button\n          text={page - 1}\n          onClick={() => setNewPage(page - 1)}\n          className=\"small\"\n        />\n      )}\n      <Button text={page} onClick={() => {}} className=\"current\" />\n      {page + 1 < totalPages && (\n        <Button\n          text={page + 1}\n          onClick={() => setNewPage(page + 1)}\n          className=\"small\"\n        />\n      )}\n      {page + 2 < totalPages && (\n        <Button\n          text={page + 2}\n          onClick={() => setNewPage(page + 2)}\n          className=\"small\"\n        />\n      )}\n      {page + 2 < totalPages - 1 && <span>...</span>}\n      {page < totalPages && (\n        <Button\n          text={totalPages}\n          onClick={() => setNewPage(totalPages)}\n          className=\"small\"\n        />\n      )}\n      {page < totalPages && (\n        <Button\n          text=\">\"\n          onClick={() => setNewPage(page + 1)}\n          className=\"small\"\n        />\n      )}\n    </div>\n  );\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"label\":\"SearchForm_label__GvSVH\",\"btn\":\"SearchForm_btn__TXrR3\",\"input\":\"SearchForm_input__HOxJo\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"IconButton_btn__PoeXD\",\"search\":\"IconButton_search__qfkbX IconButton_btn__PoeXD\"};","import { AiOutlineSearch } from \"react-icons/ai\";\nimport PropTypes from \"prop-types\";\nimport s from \"./IconButton.module.css\";\n\nfunction IconButton({ type = \"button\", icon }) {\n  switch (icon) {\n    case \"search\":\n      return (\n        <button type={type} className={s.search} aria-label=\"search\">\n          <AiOutlineSearch style={{ width: \"40\" }} />\n        </button>\n      );\n    default:\n      return <button type={type} aria-label=\"button\"></button>;\n  }\n}\n\nIconButton.propTypes = {\n  type: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default IconButton;\n","import { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport s from \"./SearchForm.module.css\";\nimport IconButton from \"components/IconButton\";\n\nfunction SearchForm(props) {\n  const [query, setQuery] = useState(\"\");\n  const [, setSearchParams] = useSearchParams();\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setQuery(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const query = e.target.query.value.trim().toLowerCase();\n    if (query) {\n      setSearchParams({ query });\n    } else {\n      setSearchParams({});\n    }\n    reset();\n  };\n  const reset = () => setQuery(\"\");\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span className={s.btn}>\n          <IconButton type=\"submit\" icon=\"search\" />\n        </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movies\"\n          value={query}\n          onInput={handleInputChange}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"MovieSearch_error__G9X2c\"};","import { useEffect, Fragment } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport MovieList from \"components/MovieList\";\nimport Loader from \"components/Loader\";\nimport api from \"js/moviesAPI\";\nimport Pagination from \"components/Pagination/Pagination\";\nimport s from \"./MovieSearch.module.css\";\n\nfunction MovieSearch({ page, totalPages, setPage, setTotalPages }) {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const { data, isLoading } = useQuery([\"movies\", query, page], getMovies);\n  function getMovies() {\n    if (!query) return [];\n    api.query = query;\n    api.page = page;\n    return api.getMovies();\n  }\n  useEffect(() => {\n    setPage(1);\n  }, [setPage]);\n\n  const { pathname } = useLocation();\n  const responseTotalPages = data?.total_pages;\n  useEffect(() => {\n    if (!responseTotalPages) return;\n    setTotalPages(responseTotalPages);\n  }, [responseTotalPages, setTotalPages]);\n\n  if (isLoading) return <Loader />;\n  if (query && !data?.results?.length)\n    return <p className={s.error}>{query} not found</p>;\n  return (\n    <Fragment>\n      {data?.results && <MovieList movies={data.results} pathname={pathname} />}\n      {query && (\n        <Pagination page={page} setPage={setPage} totalPages={totalPages} />\n      )}\n    </Fragment>\n  );\n}\nMovieSearch.propTypes = {\n  page: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  setTotalPages: PropTypes.func.isRequired,\n};\n\nexport default MovieSearch;\n","import PropTypes from \"prop-types\";\nimport Section from \"components/Section\";\nimport Container from \"components/Container\";\nimport SearchForm from \"components/SearchForm\";\nimport MovieSearch from \"components/MovieSearch\";\n\nfunction Movies({ page, totalPages, setPage, setTotalPages }) {\n  return (\n    <Section>\n      <Container>\n        <SearchForm />\n        <MovieSearch\n          page={page}\n          setPage={setPage}\n          totalPages={totalPages}\n          setTotalPages={setTotalPages}\n        />\n      </Container>\n    </Section>\n  );\n}\nMovies.propTypes = {\n  page: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  setTotalPages: PropTypes.func.isRequired,\n};\nexport default Movies;\n"],"names":["movie","pathname","location","useLocation","useSearchParams","query","get","id","title","name","poster_path","release_date","first_air_date","year","Date","getFullYear","poster","noImage","posterRetina","noImageRetina","className","s","to","state","srcSet","src","alt","movies","map","page","setPage","totalPages","setNewPage","newPage","Button","text","onClick","type","icon","style","width","props","useState","setQuery","setSearchParams","reset","onSubmit","e","preventDefault","target","value","trim","toLowerCase","placeholder","onInput","setTotalPages","useQuery","api","data","isLoading","useEffect","responseTotalPages","total_pages","Loader","results","length","Fragment","MovieList","Pagination","Section","Container"],"sourceRoot":""}