{"version":3,"file":"static/js/Cast.1eeace5b.chunk.js","mappings":"mOACA,EAAsB,kBAAtB,EAA+C,mBAA/C,EAAyE,mB,SCwCzE,MAlCA,SAAcA,GACZ,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eAWA,OATAC,EAAAA,EAAAA,YAAU,WACRH,GAAU,GACVI,EAAAA,GACcF,GACXG,MAAK,SAACC,GACLR,EAAQQ,EAAET,SAEXU,SAAQ,kBAAMP,GAAU,QAC1B,CAACE,IACAH,GAAe,SAACS,EAAA,EAAD,IACdX,EAAKY,QAER,eAAIC,UAAWC,EAAf,SACGd,EAAKe,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC7BC,EAAaF,EAAY,UArBvB,qDAqBuB,OACdA,GACb,eACJ,OACE,gBAAaL,UAAWC,EAAxB,WACE,gBAAKO,IAAKD,EAAYE,IAAI,OAAOT,UAAWC,KAC5C,uBAAIG,KACJ,uCAAeE,OAHRH,SARQ,4C,qJCtB3B,IAAMO,EAAW,gCACXC,EAAM,mCAGZ,SAASC,EAASC,GAChB,OAAOC,MAAMD,GAAKlB,MAAK,SAACC,GACtB,OAAIA,EAAEmB,GAAWnB,EAAEoB,OACZC,QAAQC,OAAOtB,MAG1B,SAASuB,EAAUC,GACjB,IAAMC,EAAW,iBAAaD,GAE9B,OAAOR,EADE,UAAMF,GAAN,OAVI,gBAUJ,OAA0BW,EAA1B,oBAAiDV,EAAjD,oBAGX,SAASW,EAASnB,GAChB,IAAMoB,EAAK,gBAAYpB,GAEvB,OAAOS,EADE,UAAMF,GAAN,OAAiBa,EAAjB,oBAAkCZ,EAAlC,oBAGX,SAASa,EAAWrB,GAClB,IAAMoB,EAAK,gBAAYpB,GAEvB,OAAOS,EADE,UAAMF,GAAN,OAAiBa,EAAjB,4BAA0CZ,EAA1C,oBAGX,SAASc,EAAWtB,GAClB,IAAMoB,EAAK,gBAAYpB,GAEvB,OAAOS,EADE,UAAMF,GAAN,OAAiBa,EAAjB,4BAA0CZ,EAA1C,oBAGX,SAASe,IAEP,OAAOd,EADE,UAAMF,EAAN,oCAA0CC,EAA1C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","js/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\"};","import { useEffect, useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Loader from \"components/Loader\";\nimport * as movieAPI from \"../../js/moviesAPI\";\nimport s from \"./Cast.module.css\";\nconst IMG_URL = \"https://www.themoviedb.org/t/p/w138_and_h175_face\";\n\nfunction Cast(props) {\n  const [cast, setCast] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [movieId] = useOutletContext();\n\n  useEffect(() => {\n    setLoader(true);\n    movieAPI\n      .getCredits(movieId)\n      .then((r) => {\n        setCast(r.cast);\n      })\n      .finally(() => setLoader(false));\n  }, [movieId]);\n  if (loader) return <Loader />;\n  if (!cast.length) return <p>No information</p>;\n  return (\n    <ul className={s.list}>\n      {cast.map(({ id, name, profile_path, character }) => {\n        const profileUrl = profile_path\n          ? `${IMG_URL}${profile_path}`\n          : \"/138x175.png\";\n        return (\n          <li key={id} className={s.item}>\n            <img src={profileUrl} alt=\"name\" className={s.img} />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default Cast;\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"fadfbb72581e18342bb7490adda20bdd\";\nconst MOVIES = \"search/movie\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then((r) => {\n    if (r.ok) return r.json();\n    return Promise.reject(r);\n  });\n}\nfunction getMovies(query) {\n  const searchQuery = `?query=${query}`;\n  const url = `${BASE_URL}${MOVIES}${searchQuery}&api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getMovie(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getCredits(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/credits?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getReviews(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/reviews?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nexport { fetchUrl, getMovies, getMovie, getCredits, getReviews, getTrending };\n"],"names":["props","useState","cast","setCast","loader","setLoader","useOutletContext","movieId","useEffect","movieAPI","then","r","finally","Loader","length","className","s","map","id","name","profile_path","character","profileUrl","src","alt","BASE_URL","KEY","fetchUrl","url","fetch","ok","json","Promise","reject","getMovies","query","searchQuery","getMovie","movie","getCredits","getReviews","getTrending"],"sourceRoot":""}