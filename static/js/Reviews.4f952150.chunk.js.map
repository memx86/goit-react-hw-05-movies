{"version":3,"file":"static/js/Reviews.4f952150.chunk.js","mappings":"mOACA,EAAuB,sBAAvB,EAAsD,wB,SCiCtD,MA5BA,SAAiBA,GACf,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eAWA,OATAC,EAAAA,EAAAA,YAAU,WACRH,GAAU,GACVI,EAAAA,GACcF,GACXG,MAAK,SAACC,GACLR,EAAWQ,EAAEC,YAEdC,SAAQ,kBAAMR,GAAU,QAC1B,CAACE,IACAH,GAAe,SAACU,EAAA,EAAD,IACdZ,EAAQa,QAEX,eAAIC,UAAWC,EAAf,SACGf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,eAAGL,UAAWC,EAAd,qBAAiCG,MACjC,uBAAIC,MAFGF,SAJa,wC,qJCrB9B,IAAMG,EAAW,gCACXC,EAAM,mCAGZ,SAASC,EAASC,GAChB,OAAOC,MAAMD,GAAKf,MAAK,SAACC,GACtB,OAAIA,EAAEgB,GAAWhB,EAAEiB,OACZC,QAAQC,OAAOnB,MAG1B,SAASoB,EAAUC,GACjB,IAAMC,EAAW,iBAAaD,GAE9B,OAAOR,EADE,UAAMF,GAAN,OAVI,gBAUJ,OAA0BW,EAA1B,oBAAiDV,EAAjD,oBAGX,SAASW,EAASf,GAChB,IAAMgB,EAAK,gBAAYhB,GAEvB,OAAOK,EADE,UAAMF,GAAN,OAAiBa,EAAjB,oBAAkCZ,EAAlC,oBAGX,SAASa,EAAWjB,GAClB,IAAMgB,EAAK,gBAAYhB,GAEvB,OAAOK,EADE,UAAMF,GAAN,OAAiBa,EAAjB,4BAA0CZ,EAA1C,oBAGX,SAASc,EAAWlB,GAClB,IAAMgB,EAAK,gBAAYhB,GAEvB,OAAOK,EADE,UAAMF,GAAN,OAAiBa,EAAjB,4BAA0CZ,EAA1C,oBAGX,SAASe,IAEP,OAAOd,EADE,UAAMF,EAAN,oCAA0CC,EAA1C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","js/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"author\":\"Reviews_author__CqYAZ\"};","import { useEffect, useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Loader from \"components/Loader\";\nimport * as movieAPI from \"../../js/moviesAPI\";\nimport s from \"./Reviews.module.css\";\n\nfunction Reviews(props) {\n  const [reviews, setReviews] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [movieId] = useOutletContext();\n\n  useEffect(() => {\n    setLoader(true);\n    movieAPI\n      .getReviews(movieId)\n      .then((r) => {\n        setReviews(r.results);\n      })\n      .finally(() => setLoader(false));\n  }, [movieId]);\n  if (loader) return <Loader />;\n  if (!reviews.length) return <p>No reviews</p>;\n  return (\n    <ul className={s.list}>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <p className={s.author}>Author: {author}</p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Reviews;\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"fadfbb72581e18342bb7490adda20bdd\";\nconst MOVIES = \"search/movie\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then((r) => {\n    if (r.ok) return r.json();\n    return Promise.reject(r);\n  });\n}\nfunction getMovies(query) {\n  const searchQuery = `?query=${query}`;\n  const url = `${BASE_URL}${MOVIES}${searchQuery}&api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getMovie(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getCredits(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/credits?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getReviews(id) {\n  const movie = `movie/${id}`;\n  const url = `${BASE_URL}${movie}/reviews?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nfunction getTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}&language=en-US`;\n  return fetchUrl(url);\n}\nexport { fetchUrl, getMovies, getMovie, getCredits, getReviews, getTrending };\n"],"names":["props","useState","reviews","setReviews","loader","setLoader","useOutletContext","movieId","useEffect","movieAPI","then","r","results","finally","Loader","length","className","s","map","id","author","content","BASE_URL","KEY","fetchUrl","url","fetch","ok","json","Promise","reject","getMovies","query","searchQuery","getMovie","movie","getCredits","getReviews","getTrending"],"sourceRoot":""}