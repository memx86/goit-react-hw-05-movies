{"version":3,"file":"static/js/Movies.b93987b1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","webpack://goit-react-hw-05-movies/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","js/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","webpack://goit-react-hw-05-movies/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.jsx","components/SearchForm/SearchForm.jsx","components/MovieSearch/MovieSearch.jsx","views/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\",\"center\":\"Button_center__afHOB Button_btn__RBtNK\",\"small\":\"Button_small__QdkfY Button_btn__RBtNK\",\"current\":\"Button_current__7YQVH Button_small__QdkfY Button_btn__RBtNK\"};","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\nfunction Button({ text, onClick, type = \"button\", className = \"btn\" }) {\n  return (\n    <button type={type} className={s[className]} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onClick: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCard_item__c3tx6\",\"link\":\"MovieCard_link__EvibY\",\"img\":\"MovieCard_img__YZsvZ\",\"text\":\"MovieCard_text__NNMdE\"};","import { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport s from \"./MovieCard.module.css\";\n\nfunction MovieCard({ movie, pathname }) {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const { id, title, name, poster_path, release_date, first_air_date } = movie;\n  const year = new Date(release_date || first_air_date).getFullYear() || \"\";\n  return (\n    <li className={s.item}>\n      <Link\n        to={`${pathname}/${id}`}\n        state={{ ...location, query }}\n        className={s.link}\n      >\n        <img\n          className={s.img}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title ?? name}\n        />\n        <p className={s.text}>\n          {title ?? name}, {year}\n        </p>\n      </Link>\n    </li>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from \"prop-types\";\nimport MovieCard from \"components/MovieCard\";\nimport s from \"./MovieList.module.css\";\n\nfunction MovieList({ movies = [], pathname }) {\n  return (\n    <ul className={s.list}>\n      {movies.map((movie) => (\n        <MovieCard key={movie.id} movie={movie} pathname={pathname} />\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Pagination_list__t7oBK\"};","import Button from \"components/Button\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Pagination.module.css\";\n\nfunction Pagination({ page, setPage, totalPages }) {\n  const setNewPage = (newPage) => {\n    let pageToSet = newPage > 1 ? newPage : 1;\n    pageToSet = newPage < totalPages ? newPage : totalPages;\n    setPage(pageToSet);\n  };\n\n  return (\n    <div className={s.list}>\n      {page > 1 && (\n        <Button\n          text=\"<\"\n          onClick={() => setNewPage(page - 1)}\n          className=\"small\"\n        />\n      )}\n      {page > 1 && (\n        <Button text=\"1\" onClick={() => setPage(1)} className=\"small\" />\n      )}\n      {page - 2 > 2 && <span>...</span>}\n      {page - 2 > 1 && (\n        <Button\n          text={page - 2}\n          onClick={() => setNewPage(page - 2)}\n          className=\"small\"\n        />\n      )}\n      {page - 1 > 1 && (\n        <Button\n          text={page - 1}\n          onClick={() => setNewPage(page - 1)}\n          className=\"small\"\n        />\n      )}\n      <Button text={page} onClick={() => {}} className=\"current\" />\n      {page + 1 < totalPages && (\n        <Button\n          text={page + 1}\n          onClick={() => setNewPage(page + 1)}\n          className=\"small\"\n        />\n      )}\n      {page + 2 < totalPages && (\n        <Button\n          text={page + 2}\n          onClick={() => setNewPage(page + 2)}\n          className=\"small\"\n        />\n      )}\n      {page + 2 < totalPages - 1 && <span>...</span>}\n      {page < totalPages && (\n        <Button\n          text={totalPages}\n          onClick={() => setNewPage(totalPages)}\n          className=\"small\"\n        />\n      )}\n      {page < totalPages && (\n        <Button\n          text=\">\"\n          onClick={() => setNewPage(page + 1)}\n          className=\"small\"\n        />\n      )}\n    </div>\n  );\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"search\":\"Section_search__Yd9dR\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ type = \"section\", children }) {\n  return <section className={s[type]}>{children}</section>;\n}\n\nSection.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","class MoviesApi {\n  static #BASE_URL = \"https://api.themoviedb.org/3/\";\n  static #KEY = \"fadfbb72581e18342bb7490adda20bdd\";\n  static #PARAMS = new URLSearchParams({\n    api_key: MoviesApi.#KEY,\n    language: \"en-US\",\n  });\n  static ENDPOINTS = {\n    SEARCH: \"search/movie\",\n    MOVIE: \"movie/\",\n    TRENDING: \"trending/all/day\",\n  };\n  #query;\n  #page;\n\n  constructor() {\n    this.#page = 1;\n  }\n\n  #fetchUrl(url) {\n    return fetch(`${MoviesApi.#BASE_URL}${url}${MoviesApi.#PARAMS}`).then((r) =>\n      r.ok ? r.json() : Promise.reject(r)\n    );\n  }\n  getMovies() {\n    const params = new URLSearchParams({\n      query: this.#query,\n      page: this.#page,\n    });\n    const url = `${MoviesApi.ENDPOINTS.SEARCH}?${params}&`;\n    return this.#fetchUrl(url);\n  }\n  getMovie(id) {\n    const url = `${MoviesApi.ENDPOINTS.MOVIE}${id}?`;\n    return this.#fetchUrl(url);\n  }\n  getCast(id) {\n    const url = `${MoviesApi.ENDPOINTS.MOVIE}${id}/credits?`;\n    return this.#fetchUrl(url).then((r) => r.cast);\n  }\n  getReviews(id) {\n    const url = `${MoviesApi.ENDPOINTS.MOVIE}${id}/reviews?`;\n    return this.#fetchUrl(url).then((r) => r.results);\n  }\n  getTrending = () => {\n    const url = `${MoviesApi.ENDPOINTS.TRENDING}?page=${this.#page}&`;\n    return this.#fetchUrl(url);\n  };\n  get query() {\n    return this.#query;\n  }\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n  get page() {\n    return this.#page;\n  }\n  set page(newPage) {\n    this.#page = newPage > 0 ? newPage : 1;\n  }\n}\n\nconst api = new MoviesApi();\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"label\":\"SearchForm_label__GvSVH\",\"btn\":\"SearchForm_btn__TXrR3\",\"input\":\"SearchForm_input__HOxJo\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"IconButton_btn__PoeXD\",\"search\":\"IconButton_search__qfkbX IconButton_btn__PoeXD\"};","import { AiOutlineSearch } from \"react-icons/ai\";\nimport PropTypes from \"prop-types\";\nimport s from \"./IconButton.module.css\";\n\nfunction IconButton({ type = \"button\", icon }) {\n  switch (icon) {\n    case \"search\":\n      return (\n        <button type={type} className={s.search} aria-label=\"search\">\n          <AiOutlineSearch style={{ width: \"40\" }} />\n        </button>\n      );\n    default:\n      return <button type={type} aria-label=\"button\"></button>;\n  }\n}\n\nIconButton.propTypes = {\n  type: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default IconButton;\n","import { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport s from \"./SearchForm.module.css\";\nimport IconButton from \"components/IconButton\";\n\nfunction SearchForm(props) {\n  const [query, setQuery] = useState(\"\");\n  const [, setSearchParams] = useSearchParams();\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setQuery(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const query = e.target.query.value.trim().toLowerCase();\n    if (query) {\n      setSearchParams({ query });\n    } else {\n      setSearchParams({});\n    }\n    reset();\n  };\n  const reset = () => setQuery(\"\");\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span className={s.btn}>\n          <IconButton type=\"submit\" icon=\"search\" />\n        </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movies\"\n          value={query}\n          onInput={handleInputChange}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport MovieList from \"components/MovieList\";\nimport Loader from \"components/Loader\";\nimport api from \"js/moviesAPI\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import s from \"./MovieSearch.module.css\";\n\nfunction MovieSearch() {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const { data, isLoading } = useQuery([\"movies\", query, page], getMovies);\n  function getMovies() {\n    if (!query) return [];\n    api.query = query;\n    api.page = page;\n    return api.getMovies();\n  }\n  const { pathname } = useLocation();\n  const responseTotalPages = data?.total_pages;\n  useEffect(() => {\n    if (!responseTotalPages) return;\n    setTotalPages(responseTotalPages);\n  }, [responseTotalPages]);\n\n  if (isLoading) return <Loader />;\n  return (\n    <Fragment>\n      <MovieList movies={data.results} pathname={pathname} />\n      {query && (\n        <Pagination page={page} setPage={setPage} totalPages={totalPages} />\n      )}\n    </Fragment>\n  );\n}\n\nexport default MovieSearch;\n","import Section from \"components/Section\";\nimport Container from \"components/Container\";\nimport SearchForm from \"components/SearchForm\";\nimport MovieSearch from \"components/MovieSearch\";\n\nfunction Movies() {\n  return (\n    <Section>\n      <Container>\n        <SearchForm />\n        <MovieSearch />\n      </Container>\n    </Section>\n  );\n}\n\nexport default Movies;\n"],"names":["text","onClick","type","className","s","movie","pathname","location","useLocation","useSearchParams","query","get","id","title","name","poster_path","release_date","first_air_date","year","Date","getFullYear","to","state","src","alt","movies","map","page","setPage","totalPages","setNewPage","newPage","Button","children","MoviesApi","getTrending","url","ENDPOINTS","TRENDING","this","params","URLSearchParams","SEARCH","MOVIE","then","r","cast","results","newQuery","fetch","ok","json","Promise","reject","api_key","language","api","icon","style","width","props","useState","setQuery","setSearchParams","reset","onSubmit","e","preventDefault","target","value","trim","toLowerCase","placeholder","onInput","setTotalPages","useQuery","data","isLoading","responseTotalPages","total_pages","useEffect","Loader","Fragment","MovieList","Pagination","Section","Container"],"sourceRoot":""}